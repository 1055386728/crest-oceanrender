// TODO(Tom): Find solution lack of compute shader variants :'(
#pragma kernel ShapeCombineCompute _DYNAMIC_WAVE_SIM_ON _FLOW_ON

#include "../OceanLODShared.hlsl"

float _HorizDisplace;
float _DisplaceClamp;
float _CrestTime;

RWTexture2D<float4> Result;

#include "ShapeCombineFunction.hlsl"

[numthreads(8,8,1)]
void ShapeCombineCompute (uint3 id : SV_DispatchThreadID)
{
    // go from uv out to world for the current shape texture
    const float2 worldPosXZ = LD_0_IDToWorld(id.xy);

    // sample the shape 1 texture at this world pos
    const float2 uv_0 = IDtoUV(id.xy).xy;
    const float2 uv_1 = LD_1_WorldToUV(worldPosXZ);

    Result[id.xy] = ShapeCombineFunction(uv_0, uv_1, worldPosXZ);
}
